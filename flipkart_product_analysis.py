# -*- coding: utf-8 -*-
"""flipkart product analysis

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1YISuYRCj_E889uXBDlg42qoQHdTIXBbU
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

df=pd.read_csv("/dataset.csv")
df

df.shape

df.size

df.info()

df.dtypes

df.describe()

df.drop(['image_links'],axis=1,inplace=True)

df.shape

# checking null value if any
df.isnull().sum()

df[df['title'].isnull()]

# Filling the null value with "other"
df['title'].fillna('Other',inplace=True)

df.title.isnull().sum()

df[df['product_rating'].isnull()]

# Filling the missing values

df['product_rating'].fillna('0',inplace=True)

df['product_rating'].isnull().sum()

df[df['selling_price'].isnull()]

df['selling_price'].fillna('0',inplace=True)

df['selling_price'].isnull().sum()

df[df['mrp'].isnull()]

df['mrp'].fillna('0',inplace=True)

df[df['seller_name'].isnull()]

df['seller_name'].fillna('Null',inplace= True)

df['seller_name'].isnull().sum()

df[df['seller_rating'].isnull()]

df['seller_rating'].fillna('0',inplace=True)

df.drop(['highlights'],axis=1,inplace=True)

df.shape

df.category_3.value_counts()[:10]

df.category_1.value_counts()

plt.figure(figsize=(3,3))

mylabels=["Women's wear","Men's wear" ,'Bady & Kids','Home and Furn','Sports & Books','Electronics' ]


plt.pie(df.category_1.value_counts(),labels=mylabels ,autopct='%0.1f%%',radius=1.25,wedgeprops=
        {'edgecolor':'white'}
        ,textprops={'size':10,},shadow=True)

plt.title('Category_1\n')
plt.show()

plt.figure(figsize=(15,5))
vc= df.category_3.value_counts()[0:10]
g=sns.barplot(x=vc.index,y=vc.values,data=df,palette='Set2')


for i in range(10):
    value=vc[i]
    g.text(y=value-2,x=i +0.125, s= value,color='black',ha='center', fontsize=10)
    
plt.title('Top 10 Product',color='Red',size=20)    
plt.show()

plt.figure(figsize=(20,5))
vc= df.seller_name.value_counts()[0:10]
g=sns.barplot(x=vc.index,y=vc.values,data=df,palette='Set2')


for i in range(10):
    value=vc[i]
    g.text(y=value-2,x=i +0.125, s= value,color='black',ha='center', fontsize=10)
    
plt.title('Top 10 Sellers Presence',color='Red', size=20)    
plt.show()

df.product_rating.value_counts()[:10].sort_values(ascending=False)

plt.figure(figsize=(20,8))
vc=df.product_rating.value_counts()[:10]
g=sns.barplot(x=vc.index , y= vc.values , data=df,palette='Set2')
plt.title('Most Given Ratings',color='Red',size=20)
plt.show()

df.columns

df['product_rating']=df['product_rating'].astype(int)

df['seller_rating']=df['seller_rating'].astype(int)

df.dtypes

df['mrp']

def remove_char(val):
    return(int(val.replace('â‚¹','').replace(',','')))

df.mrp = df.mrp.map (remove_char)

df.mrp

df.selling_price=df.selling_price.map(remove_char)

df.selling_price

sns.boxplot(x='category_1',y='product_rating',data=df)
plt.title('Category_1 vs Product Rating\n')
plt.figure(figsize=(10,10))
plt.xticks(rotation=45)
plt.show()

sns.jointplot(x='product_rating',y='selling_price',data=df)
plt.show()

product_selling_price=df.groupby(['category_3'])['selling_price'].agg(max).sort_values(ascending=False)[:10]

plt.figure(figsize=(15,8))

product_selling_price=df.groupby(['category_3'])['selling_price'].agg(max).sort_values(ascending=False)[:10]


G= sns.barplot(x=product_selling_price.index,y=product_selling_price.values,palette='magma')
for i in range(10):
    value=product_selling_price[i]

    G.text(y=value -2, x=i +0.125, s= value , color = 'black',ha='center', fontsize=15)

G.set_xlabel('Product',fontsize=15)    
G.set_ylabel('Selling Price',fontsize=15)
G.set_title('Top 10 Products with Heighest Selling Price\n',color='darkred',fontsize=30)
plt.xticks(rotation=45)
plt.show()

vc=df.groupby(['category_3'])['mrp'].agg(max).sort_values(ascending=False)[:10]

plt.figure(figsize=(15,10))
G= sns.barplot(x=vc.index, y=vc.values, data=df, palette='Set2')

for i in range(10):
    value = vc[i]
    G.text(y=value -2, x=i +0.125, s= value , color = 'black',ha='center', fontsize=12)

plt.xticks(rotation=45)
plt.xlabel('Products',fontsize=12)
plt.ylabel('MRP', fontsize=15)
plt.title('Top 10 Products with Heighest MRP')    
plt.show()

vc=df.groupby(['category_3'])['product_rating'].agg(max).sort_values(ascending=False)[:10]

plt.figure(figsize=(12,5))
G= sns.barplot(x=vc.index, y=vc.values, data=df, palette='Set2')

for i in range(10):
    value = vc[i]
    G.text(y=value -2, x=i +0.125, s= value , color = 'black',ha='center', fontsize=12)

plt.xticks(rotation=45)
plt.xlabel('Products',fontsize=12)
plt.ylabel('Ratings', fontsize=15)
plt.title('Top 10 Products as per Ratings')    
plt.show()